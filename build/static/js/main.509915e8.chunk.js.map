{"version":3,"sources":["data/startups.js","FrenchTechContext.js","components/Bot.js","components/Elements.js","components/Chat.js","components/Button.js","components/Loading.js","components/Modal.js","components/Welcome.js","app.js","serviceWorker.js","index.js","images/mobile-bg.svg"],"names":["data_startups","fintech","stripe","FrenchTechContext","React","createContext","FrenchTechState","_ref","children","_useState","useState","data","startups","Object","slicedToArray","react_default","a","createElement","Provider","value","getAlternatives","section","startup","getSections","keys","getStartupsBySection","Bot","style","width","height","viewBox","version","xmlnsXlink","transform","fillRule","stroke","strokeWidth","fill","cx","cy","r","x","y","rx","ry","Card","styled","div","_templateObject","WelcomeCard","_templateObject2","Mobile","_templateObject3","MobileBg","img","_templateObject4","ChatContainer","_templateObject5","_templateObject6","SrOnly","_templateObject7","Overlay","DialogOverlay","_templateObject8","Button","button","_templateObject9","Input","input","_templateObject10","SubmitButton","_templateObject11","ModalContent","DialogContent","_templateObject12","Container","Chat_templateObject","Bubble","Chat_templateObject2","props","primary","ButtonsContainer","Chat_templateObject3","Speaking","li","Chat_templateObject4","justifyEnd","SVG","Chat_templateObject5","BubbleWrapper","Chat_templateObject6","DateWrapper","Chat_templateObject7","textRight","List","ul","Chat_templateObject8","Chat","messages","aria-label","map","_ref2","i","user","bot","time","react","key","assign","length","aria-live","ariaAttr","components_Bot","Chat_ButtonsContainer","Button_templateObject","Bounce","keyframes","Loading_templateObject","LoadingSpinner","Loading_templateObject2","Loading","className","Modal","open","close","rewardRef","useRef","_useState2","setStartup","_useState3","_useState4","submitted","setSubmitted","_useState5","_useState6","loading","setLoading","submitStartup","asyncToGenerator","regenerator_default","mark","_callee","e","request","wrap","_context","prev","next","preventDefault","fetch","concat","sent","json","current","rewardMe","stop","_x","apply","this","arguments","web","items","from","opacity","enter","leave","styles","onDismiss","onSubmit","placeholder","required","onChange","target","build_default","type","ref","components_Loading","margin","Welcome","modalOpen","setModalOpen","href","rel","onClick","components_Modal","app","reward","mobilePhone","done","setDone","_useContext","useContext","newTime","format","Date","defaultMessages","objectSpread","sections","setMessages","_useState7","_useState8","step","setStep","_useState9","_useState10","currentAnswers","setCurrentAnswers","_useState11","_useState12","currentText","setCurrentText","_useState13","_useState14","currentSection","setCurrentSection","getBotAnswer","answer","text","toConsumableArray","setTimeout","scrollTop","scrollHeight","useEffect","answers","updateCurrentAnswers","components_Welcome","as","alt","src","mobileBg","components_Chat","Fragment","Button_Button","role","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Global","createGlobalStyle","src_templateObject","normalize","reach","rootElement","document","getElementById","ReactDOM","render","FrenchTechContext_FrenchTechState","URL","process","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.509915e8.chunk.js","sourcesContent":["export default {\n  fintech: {\n    stripe: ['Lydia', 'Test', 'cksjn', 'cshcgvsj', 'dywtsns']\n  }\n}","import React, { useState } from 'react'\nimport data from './data/startups'\n\nexport const FrenchTechContext = React.createContext()\n\nexport const FrenchTechState = ({ children }) => {\n  const [startups] = useState(data)\n\n  const getSections = () => Object.keys(startups)\n\n  const getStartupsBySection = (section) => Object.keys(startups[section])\n\n  const getAlternatives = (section, startup) => startups[section][startup]\n\n  return (\n    <FrenchTechContext.Provider value={{ startups, getAlternatives, getSections, getStartupsBySection }}>\n      {children}\n    </FrenchTechContext.Provider>\n  )\n}\n","import React from 'react'\n\nconst Bot = ({ style }) => (\n  <svg\n    width=\"39px\"\n    height=\"39px\"\n    viewBox=\"0 0 39 39\"\n    version=\"1.1\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n  >\n    <g\n      transform=\"translate(-324.000000, -328.000000) translate(12.000000, 163.000000) translate(1.000000, 107.000000) translate(311.000000, 58.000000)\"\n      fillRule=\"nonzero\"\n      stroke=\"none\"\n      strokeWidth={1}\n      fill=\"none\"\n    >\n      <circle fill=\"#4153B8\" cx=\"19.5\" cy=\"19.5\" r=\"19.5\" />\n      <rect\n        fill=\"#FFF\"\n        x=\"18.5714286\"\n        y=\"6.68571429\"\n        width=\"1.48571429\"\n        height=\"5.94285714\"\n      />\n      <circle fill=\"#FFF\" cx=\"19.5\" cy=\"6.12857143\" r=\"1.67142857\" />\n      <g transform=\"translate(7.000000, 10.000000)\">\n        <rect fill=\"#FFF\" x={0} y={0} width={25} height={20} rx={10} />\n        <rect\n          fill=\"#CCF0FF\"\n          x=\"2.94117647\"\n          y=\"4.81481481\"\n          width=\"19.1176471\"\n          height=\"10.3703704\"\n          rx=\"5.18518519\"\n        />\n        <g transform=\"translate(6.617647, 8.518519)\" fill=\"#0465C0\">\n          <ellipse\n            cx=\"1.47058824\"\n            cy=\"1.48148148\"\n            rx=\"1.47058824\"\n            ry=\"1.48148148\"\n          />\n          <ellipse\n            cx=\"10.6617647\"\n            cy=\"1.48148148\"\n            rx=\"1.47058824\"\n            ry=\"1.48148148\"\n          />\n        </g>\n      </g>\n    </g>\n  </svg>\n)\n\nexport default Bot\n","import styled from 'styled-components'\nimport { DialogOverlay, DialogContent } from '@reach/dialog'\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 40px;\n  max-width: 1000px;\n  width: 100%;\n  margin: 0 auto;\n  background: #fbfbfd;\n  box-shadow: 0 32px 44px 0 rgba(64, 68, 90, 0.2);\n  border-radius: 30px;\n  justify-content: space-between;\n\n  @media only screen and (max-width: 900px) {\n    flex-direction: column;\n    padding: 20px;\n    margin: 20px;\n  }\n\n  @media only screen and (max-width: 600px) {\n    flex-direction: column;\n    padding: 10px;\n    margin: 10px;\n  }\n`\n\nexport const WelcomeCard = styled.div`\n  max-width: 300px;\n  margin-top: 60px;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n\n  @media only screen and (max-width: 900px) {\n    order: 2;\n    text-align: center;\n    max-width: 100%;\n    margin-top: 20px;\n  }\n`\n\nexport const Mobile = styled.div`\n  min-width: 320px;\n  max-width: 375px;\n  height: 500px;\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  padding: 50px 20px 20px;\n  background: #fff;\n  border-radius: 50px;\n  z-index: 3;\n  position: relative;\n  box-shadow: 0 32px 44px 0 rgba(64, 68, 90, 0.2);\n\n  @media only screen and (max-width: 900px) {\n    padding-top: 30px;\n    margin: auto;\n  }\n`\n\nexport const MobileBg = styled.img`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 150%;\n  z-index: 0;\n  transform: translateX(-25%);\n\n  @media only screen and (max-width: 900px) {\n    left: 50%;\n    width: auto;\n    max-height: 500px;\n    transform: translateX(-50%);\n  }\n\n  @media only screen and (max-width: 600px) {\n    left: 0;\n    transform: translateX(-10%);\n    width: 120%;\n  }\n`\n\nexport const ButtonsContainer = styled.div`\n  display: flex;\n  flex-flow: wrap;\n`\n\nexport const ChatContainer = styled.div`\n  position: relative;\n  margin-left: 50px;\n  z-index: 1;\n\n  @media only screen and (max-width: 900px) {\n    margin-left: 0;\n  }\n`\n\nexport const SrOnly = styled.div`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n`\n\nexport const Overlay = styled(DialogOverlay)`\n  z-index: 99;\n  display: flex;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.4);\n`\n\nexport const Button = styled.button`\n  color: #889097;\n  line-height: 1.5;\n  margin: 0;\n  border: none;\n  appearance: none;\n  padding: 0;\n  text-decoration: underline;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: #222;\n    outline: none;\n  }\n`\n\nexport const Input = styled.input`\n  padding: 10px;\n  width: 80%;\n  margin: 20px 0;\n  display: block;\n  box-shadow: 0px 0px 0px 2px rgba(65, 83, 184, 0.7);\n  border: none;\n  transition: all 200ms ease;\n\n  &:focus {\n    outline: none;\n    box-shadow: 0px 0px 1px 2px rgba(65, 83, 184, 0.7);\n  }\n\n  ::-webkit-input-placeholder {\n    color: rgba(136, 144, 151, 0.7);\n    font-style: italic;\n  }\n  ::-moz-placeholder {\n    color: rgba(136, 144, 151, 0.7);\n    font-style: italic;\n  }\n  :-ms-input-placeholder {\n    color: rgba(136, 144, 151, 0.7);\n    font-style: italic;\n  }\n`\n\nexport const SubmitButton = styled.button`\n  padding: 10px 14px;\n  color: white;\n  background: rgba(65, 83, 184, 1);\n  border: none;\n  margin: 0;\n  font-size: 18px;\n  font-weight: bold;\n`\n\nexport const ModalContent = styled(DialogContent)`\n  border-radius: 5px;\n  @media only screen and (max-width: 600px) {\n    width: 80vw;\n  }\n`\n","import React, { Fragment } from 'react'\nimport styled from 'styled-components'\nimport BotSVG from './Bot'\nimport { SrOnly } from './Elements'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst Bubble = styled.div`\n  min-height: 20px;\n  max-width: 200px;\n  padding: 1em;\n  margin-bottom: 8px;\n  align-self: ${props => (props.primary ? 'flex-end' : 'flex-start')};\n  background: ${props => (props.primary ? '#4153B8' : 'white')};\n  color: ${props => (props.primary ? 'white' : '#54556C')};\n  border-radius: 20px;\n  box-shadow: 0 2px 4px 0 rgba(210, 210, 210, 0.5);\n`\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n  flex-grow: 1;\n  justify-content: flex-end;\n`\n\nconst Speaking = styled.li`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: ${props => (props.justifyEnd ? 'flex-start' : 'flex-end')};\n  width: 100%;\n`\n\nconst SVG = styled.div`\n  display: flex;\n  margin-right: 7px;\n`\n\nconst BubbleWrapper = styled.div``\n\nconst DateWrapper = styled.div`\n  font-size: 14px;\n  color: #aeb8c0;\n  margin-bottom: 16px;\n  padding: 0 4px;\n  text-align: ${props => (props.textRight ? 'right' : 'left')};\n`\n\nconst List = styled.ul`\n  padding-left: 0;\n  margin: 0;\n`\n\nconst Chat = ({ children, messages }) => {\n  const ariaAttr = i =>\n    i === messages.length - 1 ? { 'aria-live': 'polite' } : {}\n\n  return (\n    <Container>\n      <List aria-label=\"Conversation messages\">\n        {messages.map(({ user, bot, time }, i) => (\n          <Fragment key={i}>\n            <Speaking>\n              <BubbleWrapper>\n                <Bubble>{user}</Bubble>\n                <DateWrapper textRight>\n                  <SrOnly>Sent at</SrOnly> {time}\n                </DateWrapper>\n              </BubbleWrapper>\n            </Speaking>\n            <Speaking {...ariaAttr(i)} justifyEnd>\n              <SVG>\n                <BotSVG />\n              </SVG>\n              <BubbleWrapper>\n                <Bubble primary>{bot}</Bubble>\n                <DateWrapper>\n                  <SrOnly>Sent at</SrOnly> {time}\n                </DateWrapper>\n              </BubbleWrapper>\n            </Speaking>\n          </Fragment>\n        ))}\n      </List>\n\n      <ButtonsContainer>{children}</ButtonsContainer>\n    </Container>\n  )\n}\n\nexport default Chat\n","import styled from 'styled-components'\n\nexport const Button = styled.button`\n  border: none;\n  min-height: 20px;\n  min-width: 60px;\n  padding: 16px;\n  margin: 0 1em 1em 0;\n  justify-self: flex-end;\n  background: white;\n  color: #54556c;\n  border-radius: 20px;\n  box-shadow: 0 2px 4px 0 rgba(210, 210, 210, 0.5);\n  cursor: pointer;\n  transition: transform 250ms, box-shadow 250ms;\n\n  &:hover,\n  &:focus {\n    outline: none;\n    transform: translate3d(0, -2px, 0);\n    box-shadow: 0 2px 6px 0 rgba(110, 110, 110, 0.5);\n  }\n`\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst Bounce = keyframes`\n  0%, 80%, 100% {\n    background: #0b9af5;\n    transform: scale(0);\n  } 40% {\n    background: #EAF6FF;\n    transform: scale(1.0);\n  }\n`\n\nconst LoadingSpinner = styled.div`\n  margin: 30px auto 0;\n  width: 100%;\n  text-align: center;\n\n  div {\n    width: 8px;\n    height: 8px;\n    margin-right: 8px;\n\n    border-radius: 50%;\n    display: inline-block;\n    animation: ${Bounce} 2s infinite ease-in-out both;\n  }\n\n  .bounce1 {\n    animation-delay: -0.32s;\n  }\n\n  .bounce2 {\n    animation-delay: -0.16s;\n  }\n`\nconst Loading = ({ style }) => (\n  <LoadingSpinner style={style}>\n    <div className=\"bounce1\" />\n    <div className=\"bounce2\" />\n    <div className=\"bounce3\" />\n  </LoadingSpinner>\n)\n\nexport default Loading\n","import React, { useState, useRef } from 'react'\nimport { Transition } from 'react-spring'\nimport Reward from 'react-rewards'\nimport Loading from './Loading'\nimport { Overlay, Input, SubmitButton, ModalContent } from './Elements'\n\nconst Modal = ({ open, close }) => {\n  const rewardRef = useRef(null)\n  const [startup, setStartup] = useState('')\n  const [submitted, setSubmitted] = useState(false)\n  const [loading, setLoading] = useState(false)\n\n  const submitStartup = async e => {\n    e.preventDefault()\n    setLoading(true)\n    const request = await fetch(\n      `${\n        process.env.NODE_ENV === 'development'\n          ? 'https://frenchtech.netlify.com'\n          : ''\n      }/.netlify/functions/airtable?pepite=${startup}`\n    )\n\n    await request.json()\n    setSubmitted(true)\n    setStartup('')\n    setLoading(false)\n    rewardRef.current.rewardMe()\n  }\n\n  return (\n    <Transition\n      items={open}\n      from={{ opacity: 0, y: 200 }}\n      enter={{ opacity: 1, y: 0 }}\n      leave={{ opacity: 0, y: -200 }}\n    >\n      {open => styles =>\n        open && (\n          <Overlay\n            style={{ opacity: styles.opacity }}\n            onDismiss={() => {\n              setSubmitted(false)\n              close()\n            }}\n          >\n            <ModalContent\n              style={{\n                transform: `translate3d(0px, ${styles.y}px, 0px)`,\n              }}\n            >\n              <h1>Ajouter une pépite</h1>\n              {submitted && <h2>T'es le/la meilleur(e)</h2>}\n              <form onSubmit={submitStartup}>\n                <Input\n                  placeholder=\"Doctolib\"\n                  required\n                  value={startup}\n                  onChange={e => setStartup(e.target.value)}\n                />\n                <Reward type=\"confetti\" ref={rewardRef}>\n                  <SubmitButton type=\"submit \">\n                    {!loading ? (\n                      'Soumettre 🚀'\n                    ) : (\n                      <Loading style={{ margin: 0 }} />\n                    )}\n                  </SubmitButton>\n                </Reward>\n              </form>\n            </ModalContent>\n          </Overlay>\n        )}\n    </Transition>\n  )\n}\n\nexport default Modal\n","import React, { useState } from 'react'\nimport { WelcomeCard, Button } from './Elements'\nimport Modal from './Modal'\n\nconst Welcome = () => {\n  const [modalOpen, setModalOpen] = useState(false)\n  return (\n    <WelcomeCard>\n      <div>\n        <h1>Bonjour mon ami(e) !</h1>\n        <h2>Bienvenue sur FTT</h2>\n        <p>Notre bot connais de belles startups de la FrenchTech, pouvant servir d'alternatives aux géants US.</p>\n      </div>\n      <div>\n        <p>\n          Créé par{' '}\n          <a\n            href=\"https://twitter.com/florian_adonis\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Florian Adonis\n          </a>{' '}\n        </p>\n        <p>\n          Le code sur{' '}\n          <a\n            href=\"https://github.com/tanohzana/frenchtech.today\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Github\n          </a>\n        </p>\n        <p>\n          Forked from{' '}\n          <a\n            href=\"https://github.com/wabisabi-js/boredaf.app\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            boredaf.app\n          </a>\n        </p>\n        <p>\n          <Button onClick={() => setModalOpen(true)}>Ajouter une entreprise</Button>\n        </p>\n      </div>\n      <Modal open={modalOpen} close={() => setModalOpen(false)} />\n    </WelcomeCard>\n  )\n}\n\nexport default Welcome\n","import React, { Fragment, useContext, useEffect, useState, useRef } from 'react'\nimport { FrenchTechContext } from './FrenchTechContext'\nimport Chat from './components/Chat'\nimport { Button } from './components/Button'\nimport Reward from 'react-rewards'\nimport Loading from './components/Loading'\nimport Welcome from './components/Welcome'\nimport {\n  Card,\n  ChatContainer,\n  Mobile,\n  MobileBg,\n  SrOnly,\n} from './components/Elements'\nimport mobileBg from './images/mobile-bg.svg'\nimport { format } from 'date-fns'\n\nexport default () => {\n  let reward\n  const mobilePhone = useRef(null)\n  const [done, setDone] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const { getAlternatives, getSections, getStartupsBySection } = useContext(FrenchTechContext)\n  const newTime = () => ({ time: format(new Date(), 'HH:mm') })\n  const defaultMessages = [\n    {\n      user: 'Je cherche une alternative dans la FrenchTech.',\n      bot: 'Dans quel secteur cherchez vous ?',\n      ...newTime(),\n    },\n  ]\n  const sections = getSections()\n  const [messages, setMessages] = useState(defaultMessages)\n  const [step, setStep] = useState('sections')\n  const [currentAnswers, setCurrentAnswers] = useState(sections)\n  const [currentText, setCurrentText] = useState()\n  const [currentSection, setCurrentSection] = useState()\n\n  const updateStep = () => {\n    if (step === 'sections') {\n      setStep('startups')\n    } else if (step === 'startups') {\n      setStep('alternatives')\n    } else if (step === 'alternatives') {\n      setStep('end')\n      setDone(true)\n    }\n  }\n\n  const updateCurrentAnswers = () => {\n    if (step === 'sections') {\n      const answers = getSections()\n      setCurrentAnswers(answers)\n    } else if (step === 'startups') {\n      const answers = getStartupsBySection(currentText)\n      setCurrentSection(currentText)\n      setCurrentAnswers(answers)\n    } else if (step === 'alternatives') {\n      const answers = getAlternatives(currentSection, currentText)\n      setCurrentAnswers(answers)\n    }\n  }\n\n  const getBotAnswer = () => {\n    switch(step) {\n      case 'sections':\n        return 'Vous cherchez une alternative à ... 🧐'\n      case 'startups':\n        return 'Voilà ce que j\\'ai trouvé 😁'\n      case 'alternatives':\n        return 'Voilà toutes les infos 🕵️‍♀️'\n      default:\n        return ''\n    }\n  }\n\n  const answer = (text) => {\n    setLoading(true)\n    setCurrentText(text)\n    setMessages([\n      ...messages,\n      {\n        user: text,\n        bot: getBotAnswer(),\n        ...newTime(),\n      },\n    ])\n    updateStep()\n\n    setTimeout(() => {\n      setLoading(false)\n    }, 500)\n\n    setTimeout(() => {\n      mobilePhone.current.scrollTop = mobilePhone.current.scrollHeight\n    }, 0)\n  }\n\n  const confetti = () => reward.rewardMe()\n\n  const restart = () => {\n    setMessages(defaultMessages)\n    setStep('sections')\n    setCurrentAnswers(sections)\n    setCurrentText('')\n    setCurrentSection('')\n    setDone(false)\n  }\n\n  useEffect(() => {\n    updateCurrentAnswers()\n  }, [step, currentText])\n\n  return (\n    <Fragment>\n      <Card>\n        <Welcome />\n        <ChatContainer>\n          <SrOnly as=\"h2\">Chat</SrOnly>\n          <MobileBg alt=\"background\" src={mobileBg} />\n          <Mobile ref={mobilePhone}>\n            <Chat messages={messages}>\n              {done ?\n                <>\n                  <Reward\n                    type=\"confetti\"\n                    ref={ref => {\n                      reward = ref\n                    }}\n                  >\n                    <Button onClick={() => confetti()}>\n                      Génial\n                    </Button>\n                  </Reward>\n                  <Button onClick={() => restart()}>Recommencer</Button>\n                </> :\n                <>\n                  {!loading && currentAnswers.map((text) => (\n                    <Button key={text} onClick={() => answer(text)}>\n                      <span role=\"img\" aria-label={text}>\n                        {text}\n                      </span>\n                    </Button>\n                  ))}\n                </>\n              }\n              {loading && !done ? <Loading /> : null}\n            </Chat>\n          </Mobile>\n        </ChatContainer>\n      </Card>\n    </Fragment>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { FrenchTechState } from './FrenchTechContext'\nimport { createGlobalStyle } from 'styled-components'\nimport normalize from 'normalize.css'\nimport reach from '@reach/dialog/styles.css'\nimport Main from './app'\nimport * as serviceWorker from './serviceWorker'\n\nconst Global = createGlobalStyle`\n  ${normalize}\n  ${reach}\n  @import url('https://fonts.googleapis.com/css?family=Nunito+Sans');\n  body {\n    font-family: 'Nunito Sans', sans-serif;\n    background: #DADDF2;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n\n    h1 {\n      color: #E45471;\n      font-size: 30px;\n      margin: 0;\n      line-height: 1.5;\n    }\n\n    h2 {\n      color: #41495D;\n      line-height: 1.5;\n      font-size:28px;\n      margin: 0;\n\n    }\n    p, a {\n      color: #889097;\n      line-height: 1.5;\n      margin: 0;\n    }\n\n    a:hover, a:focus {\n      color: #222;\n      outline: none;\n    }\n  }\n\n  #root {\n    height: 100%;\n    display: flex;\n    align-items: flex-end;\n\n    @media only screen and (min-width: 901px) {\n      margin: 40px;\n    }\n  }\n`\n\nfunction App() {\n  return (\n    <FrenchTechState>\n      <Main />\n      <Global />\n    </FrenchTechState>\n  )\n}\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)\nserviceWorker.register()\n","module.exports = __webpack_public_path__ + \"static/media/mobile-bg.9c572c13.svg\";"],"sourceRoot":""}